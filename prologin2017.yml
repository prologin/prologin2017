name: prologin2017
rules_type: turnbased

constant:
  -
    cst_name: TAILLE_ETABLI
    cst_val: 6
    cst_comment: Taille de l'établi de travail (longueur et largeur).

  -
    cst_name: NB_TOURS
    cst_val: 100
    cst_comment: Nombre de tours à jouer avant la fin de l'expérience.

  -
    cst_name: NB_TYPES_CASES
    cst_val: 5
    cst_comment: 3 métaux qui rapportent des points, 1 élément pour transmuter, 1 élément pour détruire


enum:
  -
    enum_name: erreur
    enum_summary: "Erreurs possibles"
    enum_field:
      - [ok, "L'action a été exécutée avec succès."]
      - [position_invalide, "La position spécifiée n'est pas sur l'établi."]
      - [placement_invalide, "Les deux positions ne correspondent pas à des
                               cases adjacentes."]
      - [placement_impossible, "Les cases ciblées ne sont pas vides."]
      - [case_vide, "La case ciblée est vide."]
      - [échantillon_incomplet, "L'échantillon ne peut pas contenir de case vide"]
      - [échantillon_invalide, "L'échantillon doit contenir au moins un des éléments
                           de l'échantillon reçu auparavant."]

  -
    enum_name: case_type
    enum_summary: "Types de cases"
    enum_field:
      - [vide, "Case vide"]
      - [plomb, "Plomb transformable en or"]
      - [fer, "Fer transformable en or"]
      - [cuivre, "Cuivre transformable en or"]
      - [soufre, "Elément pour la sublimation"]
      - [mercure, "Elément pour la transmutation"]

struct:
  -
    str_name: position
    str_summary: Position sur la carte, donnée par deux coordonnées.
    str_tuple: yes
    str_field:
      - [colonne, int, "Coordonnée : colonne"]
      - [ligne, int, "Coordonnée : ligne"]
  -
    str_name: échantillon
    str_summary: Echantillon, défini par deux types d'éléments.
    str_tuple: yes
    str_field:
      - [élément1, case_type, "Elément 1"]
      - [élément2, case_type, "Elément 2"]

function:

# Actions

  -
    fct_name: placer_échantillon
    fct_summary: Place l'échantillon du tour sur l'établi, 
                 avec les coordonnées de deux cases adjacentes.
    fct_ret_type: erreur
    fct_action: yes
    fct_arg:
      - [pos1, position, "Case du terrain où doit être posé
                          le premier élément de l'échantillon"]
      - [pos2, position, "Case du terrain où doit être posé
                          le second élément de l'échantillon"]

  -
    fct_name: activer_region #FIXME
    fct_summary: Fait disparaître le terrain de la case ciblée, 
                 ainsi que tous ceux de toutes les cases de la région 
                 à laquelle il appartient. Cela enclenche l'effet de cet élément 
                 dans les proportions adaptées.
    fct_ret_type: erreur
    fct_action: yes
    fct_arg:
      - [pos, position, "Case de l'établi dont la région doit être activée"]

  -
    fct_name: transmuter
    fct_summary: Utilise un point de transmutation d'élément sur la case ciblée 
                 du joueur indiqué. 
                 Remplace l'ancien élément par l'élément indiqué.
    fct_ret_type: erreur
    fct_action: yes
    fct_arg:
      - [pos, position, "Case de l'élément qui doit être changée"]
      - [id_joueur, int, "Identifiant du joueur dont l'élément est ciblé"]
      - [terrain, case_type, "Type d'élément qui doit remplacer l'ancien"]

  -
    fct_name: sublimer
    fct_summary: Utilise un point de sublimation sur la case ciblée 
                 du joueur indiqué. Détruit l'élément de la case.
    fct_ret_type: erreur
    fct_action: yes
    fct_arg:
      - [pos, position, "Case de l'élément qui doit être détruit"]
      - [id_joueur, int, "Identifiant du joueur dont l'élément est ciblé"]

  -
    fct_name: donner_échantillon
    fct_summary: Définit l'échantillon que l'adversaire recevra à son prochain tour.
    fct_ret_type: erreur
    fct_action: yes
    fct_arg:
      - [échantillon, échantillon, "Echantillon que l'adversaire recevra à son prochain tour"]

# Fonctions de requête sur le terrain

  -
    fct_name: type_case
    fct_summary: Renvoie le type d'une case donnée.
    fct_ret_type: case_type
    fct_arg:
      - [pos, position, "Case choisie."]
      - [id_joueur, int, "Joueur choisi."]

  -
    fct_name: est_vide
    fct_summary: Indique si une case donnée est vide ou est un terrain.
    fct_ret_type: bool
    fct_arg:
      - [pos, position, "Case choisie."]
      - [id_joueur, int, "Joueur choisi."]

# Historique (actions de l'adversaire le tour précédent)
# TODO: fill this

# Autre

  -
    fct_name: moi
    fct_summary: Renvoie votre numéro de joueur.
    fct_ret_type: int
    fct_arg: []
  -
    fct_name: adversaire
    fct_summary: Renvoie le numéro de votre adversaire.
    fct_ret_type: int
    fct_arg: []
 -
    fct_name: score
    fct_summary: Renvoie le score du joueur désigné par le numéro ``id_joueur``.
                 Renvoie -1 si ``id_joueur`` est invalide.
    fct_ret_type: int
    fct_arg:
      - [id_joueur, int, "Identifiant du joueur"]
  -
    fct_name: tour_actuel
    fct_summary: Renvoie le numéro du tour actuel.
    fct_ret_type: int
    fct_arg: []
  -
    fct_name: annuler
    fct_summary: "Annule la dernière action.
         Renvoie ``false`` quand il n'y a pas d'action à annuler ce tour-ci."
    fct_ret_type: bool
    fct_arg: []
  -
    fct_name: points_changement
    fct_summary: "Indique votre nombre de points de transmutation pour ce tour."
    fct_ret_type: int
    fct_arg: []
  -
    fct_name: points_sublimation
    fct_summary: "Indique votre nombre de points de sublimation pour ce tour."
    fct_ret_type: int
    fct_arg: []
  -
    fct_name: échantillon_tour
    fct_summary: "Indique l'échantillon reçu pour ce tour."
    fct_ret_type: échantillon
    fct_arg: []


user_function:
  -
    fct_name: partie_init
    fct_summary: Fonction appelée au début de la partie.
    fct_ret_type: void
    fct_arg: []
  -
    fct_name: jouer_tour
    fct_summary: Fonction appelée à chaque tour.
    fct_ret_type: void
    fct_arg: []
  -
    fct_name: partie_fin
    fct_summary: Fonction appelée à la fin de la partie.
    fct_ret_type: void
    fct_arg: []
